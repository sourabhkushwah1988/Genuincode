/* You said:
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        background: linear-gradient(to right, #d3cce3, #e9e4f0);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .card {
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 0 25px rgba(0, 0, 0, 0.1);
      }

      .error-message {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: 0.25rem;
      }
    </style>
  </head>
  <body>
    <!-- Navigation bar -->
    <nav>
      <img src="image/logo.png" alt="Logo" />
      <div class="navigation">
        <ul>
          <i class="fas fa-times"></i>
          <li><a href="home">Home</a></li>
          <li><a href="about">About</a></li>
          <li><a href="blog">Blog</a></li>
          <li><a href="course">Course</a></li>
          <li><a href="contact">Contact</a></li>
          <li><a href="user_home">User Home</a></li>
          <li><a href="signin">Signin</a></li>
        </ul>
        <img id="menu-btn" src="image/menu1.png" alt="Menu" />
      </div>
    </nav>
    <!-- form  -->

    <div class="container">
      <div class="row justify-content-center">
        <div class="col-md-6">
          <div class="card bg-white">
            <h3 class="text-center mb-4">Create an Account</h3>
            <form onsubmit="return validateForm()">
              <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input
                  type="text"
                  class="form-control"
                  id="username"
                  name="username"
                />
                <div class="error-message" id="usernameError"></div>
              </div>
              <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input
                  type="email"
                  class="form-control"
                  id="email"
                  name="email"
                />
                <div class="error-message" id="emailError"></div>
              </div>
              <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input
                  type="password"
                  class="form-control"
                  id="password"
                  name="password"
                />
                <div class="error-message" id="passwordError"></div>
              </div>
              <div class="mb-3">
                <label for="confirmPassword" class="form-label"
                  >Confirm Password</label
                >
                <input
                  type="password"
                  class="form-control"
                  id="confirmPassword"
                  name="confirmPassword"
                />
                <div class="error-message" id="confirmPasswordError"></div>
              </div>
              <button type="submit" class="btn btn-primary w-100">
                Sign Up
              </button>
            </form>
            <p class="mt-3 text-center">
              Already have an account?
              <a href="signin">Sign In</a>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS (optional for components) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      function validateForm() {
        let isValid = true;

        const username = document.getElementById("username").value.trim();
        const email = document.getElementById("email").value.trim();
        const password = document.getElementById("password").value.trim();
        const confirmPassword = document
          .getElementById("confirmPassword")
          .value.trim();

        // Clear error messages
        document.getElementById("usernameError").innerText = "";
        document.getElementById("emailError").innerText = "";
        document.getElementById("passwordError").innerText = "";
        document.getElementById("confirmPasswordError").innerText = "";

        if (username === "") {
          document.getElementById("usernameError").innerText =
            "Username is required.";
          isValid = false;
        }

        const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
        if (!email.match(emailPattern)) {
          document.getElementById("emailError").innerText =
            "Please enter a valid email.";
          isValid = false;
        }

        if (password.length < 6) {
          document.getElementById("passwordError").innerText =
            "Password must be at least 6 characters.";
          isValid = false;
        }

        if (confirmPassword !== password) {
          document.getElementById("confirmPasswordError").innerText =
            "Passwords do not match.";
          isValid = false;
        }

        return isValid;
      }
    </script>
  </body>
</html>
add signup with google email,facebook,github
ChatGPT said:
To add Sign Up with Google, Facebook, and GitHub functionality to your signup page, you'll typically use OAuth 2.0 via providers like Firebase, Auth0, or a backend like Django with social-auth.

Here’s a front-end example using Google, Facebook, and GitHub buttons (styling + placeholders), assuming you'll handle the logic with a backend or JavaScript SDK.

✅ Updated HTML with Social Signup Options
Add the following inside the .card just above your regular form:

html
Copy
Edit
<!-- Social Signup Options -->
<div class="text-center mb-3">
  <p>Sign up with</p>
  <div class="d-flex justify-content-center gap-3">
    <a href="/auth/google" class="btn btn-outline-danger">
      <i class="fab fa-google"></i> Google
    </a>
    <a href="/auth/facebook" class="btn btn-outline-primary">
      <i class="fab fa-facebook-f"></i> Facebook
    </a>
    <a href="/auth/github" class="btn btn-outline-dark">
      <i class="fab fa-github"></i> GitHub
    </a>
  </div>
  <hr class="my-4" />
</div>
🧩 Add FontAwesome for Icons
In your <head> section, include this line:

html
Copy
Edit
<script
  src="https://kit.fontawesome.com/a076d05399.js"
  crossorigin="anonymous"
></script>
📌 Backend Integration (Optional Tips)
If you're using Django, consider adding:

django-allauth or

python-social-auth

They provide routes like /auth/google, /auth/facebook, and /auth/github that the anchor tags above point to.

Final Thoughts
Would you like help integrating this with Django + django-allauth, or do you prefer a frontend-only Google sign-in using Firebase or similar?

You said:
add this 
ChatGPT said:
Great! Here's your updated full HTML file with:

Social sign-up buttons for Google, Facebook, and GitHub

Font Awesome icons

Divider between social and form signup

✅ Complete HTML Code (with social signup options added):
html
Copy
Edit
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome for icons -->
    <script
      src="https://kit.fontawesome.com/a076d05399.js"
      crossorigin="anonymous"
    ></script>
    <style>
      body {
        background: linear-gradient(to right, #d3cce3, #e9e4f0);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .card {
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 0 25px rgba(0, 0, 0, 0.1);
      }

      .error-message {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: 0.25rem;
      }
    </style>
  </head>
  <body>
    <!-- Navigation bar -->
    <nav>
      <img src="image/logo.png" alt="Logo" />
      <div class="navigation">
        <ul>
          <i class="fas fa-times"></i>
          <li><a href="home">Home</a></li>
          <li><a href="about">About</a></li>
          <li><a href="blog">Blog</a></li>
          <li><a href="course">Course</a></li>
          <li><a href="contact">Contact</a></li>
          <li><a href="user_home">User Home</a></li>
          <li><a href="signin">Signin</a></li>
        </ul>
        <img id="menu-btn" src="image/menu1.png" alt="Menu" />
      </div>
    </nav>

    <!-- form  -->
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-md-6">
          <div class="card bg-white">
            <h3 class="text-center mb-4">Create an Account</h3>

            <!-- Social Signup Buttons -->
            <div class="text-center mb-3">
              <p>Sign up with</p>
              <div class="d-flex justify-content-center gap-3">
                <a href="/auth/google" class="btn btn-outline-danger">
                  <i class="fab fa-google"></i> Google
                </a>
                <a href="/auth/facebook" class="btn btn-outline-primary">
                  <i class="fab fa-facebook-f"></i> Facebook
                </a>
                <a href="/auth/github" class="btn btn-outline-dark">
                  <i class="fab fa-github"></i> GitHub
                </a>
              </div>
              <hr class="my-4" />
            </div>

            <!-- Signup Form -->
            <form onsubmit="return validateForm()">
              <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input
                  type="text"
                  class="form-control"
                  id="username"
                  name="username"
                />
                <div class="error-message" id="usernameError"></div>
              </div>
              <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input
                  type="email"
                  class="form-control"
                  id="email"
                  name="email"
                />
                <div class="error-message" id="emailError"></div>
              </div>
              <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input
                  type="password"
                  class="form-control"
                  id="password"
                  name="password"
                />
                <div class="error-message" id="passwordError"></div>
              </div>
              <div class="mb-3">
                <label for="confirmPassword" class="form-label"
                  >Confirm Password</label
                >
                <input
                  type="password"
                  class="form-control"
                  id="confirmPassword"
                  name="confirmPassword"
                />
                <div class="error-message" id="confirmPasswordError"></div>
              </div>
              <button type="submit" class="btn btn-primary w-100">
                Sign Up
              </button>
            </form>
            <p class="mt-3 text-center">
              Already have an account?
              <a href="signin">Sign In</a>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Form Validation -->
    <script>
      function validateForm() {
        let isValid = true;

        const username = document.getElementById("username").value.trim();
        const email = document.getElementById("email").value.trim();
        const password = document.getElementById("password").value.trim();
        const confirmPassword = document
          .getElementById("confirmPassword")
          .value.trim();

        document.getElementById("usernameError").innerText = "";
        document.getElementById("emailError").innerText = "";
        document.getElementById("passwordError").innerText = "";
        document.getElementById("confirmPasswordError").innerText = "";

        if (username === "") {
          document.getElementById("usernameError").innerText =
            "Username is required.";
          isValid = false;
        }

        const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
        if (!email.match(emailPattern)) {
          document.getElementById("emailError").innerText =
            "Please enter a valid email.";
          isValid = false;
        }

        if (password.length < 6) {
          document.getElementById("passwordError").innerText =
            "Password must be at least 6 characters.";
          isValid = false;
        }

        if (confirmPassword !== password) {
          document.getElementById("confirmPasswordError").innerText =
            "Passwords do not match.";
          isValid = false;
        }

        return isValid;
      }
    </script>
  </body>
</html>
Would you like help connecting these buttons to actual login providers using Django (django-allauth) or a JavaScript SDK like Firebase?







You said:
connect this


ChatGPT said:
Updated saved memory
Awesome! Let's connect those Google, Facebook, and GitHub signups to your project using Django + django-allauth. Here's a full guide:

✅ Step 1: Install Required Packages
Run this in your terminal:

bash
Copy
Edit
pip install django-allauth
Add these in your settings.py:

python
Copy
Edit
INSTALLED_APPS = [
    ...
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.github',
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
✅ Step 2: Add URLs
In your urls.py:

python
Copy
Edit
from django.urls import path, include

urlpatterns = [
    ...
    path('accounts/', include('allauth.urls')),  # Enables social login routes
]
✅ Step 3: Add Social Apps in Django Admin
Run migrations:

bash
Copy
Edit
python manage.py migrate
Create a superuser:

bash
Copy
Edit
python manage.py createsuperuser
Start your server and log in to the admin panel:
http://localhost:8000/admin

Go to Social Applications and add new apps:

Provider: Google / Facebook / GitHub

Name: Anything (e.g., Google Auth)

Client ID & Secret: From respective provider (see next step)

Sites: Select your domain (e.g., example.com or localhost:8000)

✅ Step 4: Create OAuth Apps
🔹 Google
Go to Google Developer Console

Create a project → OAuth consent screen → Add credentials

Redirect URI: http://localhost:8000/accounts/google/login/callback/

🔹 Facebook
Go to Facebook Developers

Create App → Facebook Login

Redirect URI: http://localhost:8000/accounts/facebook/login/callback/

🔹 GitHub
Go to GitHub Developer Settings

New OAuth App → Add redirect URI: http://localhost:8000/accounts/github/login/callback/

✅ Step 5: Link Buttons in HTML
Update the social buttons in your signup form like this:

html
Copy
Edit
<a href="{% url 'socialaccount_login' 'google' %}" class="btn btn-outline-danger">
  <i class="fab fa-google"></i> Google
</a>
<a href="{% url 'socialaccount_login' 'facebook' %}" class="btn btn-outline-primary">
  <i class="fab fa-facebook-f"></i> Facebook
</a>
<a href="{% url 'socialaccount_login' 'github' %}" class="btn btn-outline-dark">
  <i class="fab fa-github"></i> GitHub
</a>
(If this is a static HTML file, you’ll need to load it via a Django template to use {% url %}.)

✅ Bonus: Clean URLs (optional)
If you want custom login routes like /auth/google, use path() redirection or override views.

Would you like me to help you:

Set up one provider end-to-end (like Google)?

Configure a clean Django template for the signup page?

Show you how to test the OAuth locally?

Let me know how deep you want to go!







You said:
update html code


ChatGPT said:
Sure! Here's your updated HTML file rewritten as a Django template, with working social login URLs using {% url 'socialaccount_login' '<provider>' %} for Google, Facebook, and GitHub via django-allauth.

✅ signup.html — Django Template with Social Signup
html
Copy
Edit
{% load socialaccount %}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome -->
    <script
      src="https://kit.fontawesome.com/a076d05399.js"
      crossorigin="anonymous"
    ></script>
    <style>
      body {
        background: linear-gradient(to right, #d3cce3, #e9e4f0);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .card {
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 0 25px rgba(0, 0, 0, 0.1);
      }

      .error-message {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: 0.25rem;
      }
    </style>
  </head>
  <body>
    <!-- Navigation bar -->
    <nav>
      <img src="{% static 'image/logo.png' %}" alt="Logo" />
      <div class="navigation">
        <ul>
          <i class="fas fa-times"></i>
          <li><a href="{% url 'home' %}">Home</a></li>
          <li><a href="{% url 'about' %}">About</a></li>
          <li><a href="{% url 'blog' %}">Blog</a></li>
          <li><a href="{% url 'course' %}">Course</a></li>
          <li><a href="{% url 'contact' %}">Contact</a></li>
          <li><a href="{% url 'user_home' %}">User Home</a></li>
          <li><a href="{% url 'account_login' %}">Signin</a></li>
        </ul>
        <img id="menu-btn" src="{% static 'image/menu1.png' %}" alt="Menu" />
      </div>
    </nav>

    <!-- Signup card -->
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-md-6">
          <div class="card bg-white">
            <h3 class="text-center mb-4">Create an Account</h3>

            <!-- Social Signup Buttons -->
            <div class="text-center mb-3">
              <p>Sign up with</p>
              <div class="d-flex justify-content-center gap-3 flex-wrap">
                <a href="{% provider_login_url 'google' %}" class="btn btn-outline-danger">
                  <i class="fab fa-google"></i> Google
                </a>
                <a href="{% provider_login_url 'facebook' %}" class="btn btn-outline-primary">
                  <i class="fab fa-facebook-f"></i> Facebook
                </a>
                <a href="{% provider_login_url 'github' %}" class="btn btn-outline-dark">
                  <i class="fab fa-github"></i> GitHub
                </a>
              </div>
              <hr class="my-4" />
            </div>

            <!-- Regular Signup Form -->
            <form method="post" onsubmit="return validateForm()">
              {% csrf_token %}
              <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input
                  type="text"
                  class="form-control"
                  id="username"
                  name="username"
                />
                <div class="error-message" id="usernameError"></div>
              </div>
              <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input
                  type="email"
                  class="form-control"
                  id="email"
                  name="email"
                />
                <div class="error-message" id="emailError"></div>
              </div>
              <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input
                  type="password"
                  class="form-control"
                  id="password"
                  name="password"
                />
                <div class="error-message" id="passwordError"></div>
              </div>
              <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input
                  type="password"
                  class="form-control"
                  id="confirmPassword"
                  name="confirmPassword"
                />
                <div class="error-message" id="confirmPasswordError"></div>
              </div>
              <button type="submit" class="btn btn-primary w-100">
                Sign Up
              </button>
            </form>

            <p class="mt-3 text-center">
              Already have an account?
              <a href="{% url 'account_login' %}">Sign In</a>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Form Validation -->
    <script>
      function validateForm() {
        let isValid = true;

        const username = document.getElementById("username").value.trim();
        const email = document.getElementById("email").value.trim();
        const password = document.getElementById("password").value.trim();
        const confirmPassword = document
          .getElementById("confirmPassword")
          .value.trim();

        document.getElementById("usernameError").innerText = "";
        document.getElementById("emailError").innerText = "";
        document.getElementById("passwordError").innerText = "";
        document.getElementById("confirmPasswordError").innerText = "";

        if (username === "") {
          document.getElementById("usernameError").innerText =
            "Username is required.";
          isValid = false;
        }

        const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
        if (!email.match(emailPattern)) {
          document.getElementById("emailError").innerText =
            "Please enter a valid email.";
          isValid = false;
        }

        if (password.length < 6) {
          document.getElementById("passwordError").innerText =
            "Password must be at least 6 characters.";
          isValid = false;
        }

        if (confirmPassword !== password) {
          document.getElementById("confirmPasswordError").innerText =
            "Passwords do not match.";
          isValid = false;
        }

        return isValid;
      }
    </script>
  </body>
</html>
✅ Next Steps:
Make sure you’ve done the following:

Added 'allauth.socialaccount.providers.google', etc. in INSTALLED_APPS

Configured Google, Facebook, GitHub OAuth apps and added them in Django Admin under Social Applications

Passed correct redirect_uri in developer platforms (like http://localhost:8000/accounts/google/login/callback/)

Would you like me to help:

Set up the Google Developer Console or Facebook App?

Create the signup view that this form should submit to?

Let me know how hands-on you want to go!







You said:
create models for this form i want to connect sqlite3


ChatGPT said:
Great! Let's create a Django model for the signup form you shared so the data can be stored in SQLite3.

Since you're already planning to use django-allauth for social logins and possibly Django's built-in User model, you have two main options:

✅ Option 1: Use Django's built-in User model (Recommended)
Django already has fields for username, email, password, etc. You can extend it if needed.

But if you want to create your own model to capture additional signup data (e.g. tracking signups or adding more custom fields), here's how you can do it:

🛠️ Step-by-Step: Create a Model for Signup
1. Create the Model
In your app (e.g., accounts/models.py):

python
Copy
Edit
from django.db import models

class Signup(models.Model):
    username = models.CharField(max_length=150, unique=True)
    email = models.EmailField(unique=True)
    password = models.CharField(max_length=128)  # Hash this in real apps!
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.username
⚠️ Note: Passwords should always be hashed — don’t store plain text passwords. This example is for demonstration.

2. Add Model to Admin Panel (Optional)
In accounts/admin.py:

python
Copy
Edit
from django.contrib import admin
from .models import Signup

admin.site.register(Signup)
3. Make Migrations
Run the following:

bash
Copy
Edit
python manage.py makemigrations
python manage.py migrate
This will create the table in your sqlite3 database.

4. Create a Form (Optional, but Clean)
You can make a Django form to handle validation nicely.

In accounts/forms.py:

python
Copy
Edit
from django import forms
from .models import Signup

class SignupForm(forms.ModelForm):
    confirm_password = forms.CharField(widget=forms.PasswordInput)

    class Meta:
        model = Signup
        fields = ['username', 'email', 'password']
        widgets = {
            'password': forms.PasswordInput(),
        }

    def clean(self):
        cleaned_data = super().clean()
        password = cleaned_data.get("password")
        confirm_password = cleaned_data.get("confirm_password")

        if password and confirm_password and password != confirm_password:
            self.add_error('confirm_password', "Passwords do not match.")
5. Create View and Connect to HTML
In accounts/views.py:

python
Copy
Edit
from django.shortcuts import render, redirect
from .forms import SignupForm

def signup_view(request):
    if request.method == 'POST':
        form = SignupForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('account_login')  # Or any success page
    else:
        form = SignupForm()
    return render(request, 'signup.html', {'form': form})
6. Update URL
In accounts/urls.py:

python
Copy
Edit
from django.urls import path
from .views import signup_view

urlpatterns = [
    path('signup/', signup_view, name='signup'),
]
And include this in your main urls.py.

Would you like me to:

Help you hook this into your existing form?

Replace your HTML with {{ form.as_p }} for easy rendering?

Hash passwords using User model or make_password()?

Let me know how secure and integrated you want it!







You said:
created_at = models.DateTimeField(auto_now_add=True)  what  is this 


ChatGPT said:
Great question!

python
Copy
Edit
created_at = models.DateTimeField(auto_now_add=True)
This line means:

🟢 created_at is a date-time field — it will store the exact date and time something was created (like a signup record).

🔵 auto_now_add=True tells Django:

“Set this field to the current date and time automatically when the object is first created, and never change it again.”

✅ Example:
If someone signs up at:

yaml
Copy
Edit
April 19, 2025 at 5:30 PM
Then created_at will be saved as:

yaml
Copy
Edit
2025-04-19 17:30:00
And even if you later update that record, created_at will stay the same.

🔄 Related Option:
auto_now=True: Automatically updates the field every time the object is saved — useful for updated_at.

🔧 Common Use:
You’ll often see both:

python
Copy
Edit
created_at = models.DateTimeField(auto_now_add=True)
updated_at = models.DateTimeField(auto_now=True)
This way, you know:

When the record was created (created_at)

When it was last modified (updated_at)

Want me to add that updated_at field too? */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Poppins", sans-serif;
}

h1 {
  font-size: 25px;
  font-weight: 700;
  color: rgb(35, 35, 85);
}

span {
  font-size: 9px;
  color: #757373;
}

h6 {
  font-size: 11px;
  color: rgb(24, 24, 49);
}

/* navigation */

nav {
  position: fixed;
  width: 100%;
  background-color: #fff;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 1vw 8vw;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.15);
  z-index: 999;
}

nav img {
  width: 70px;
  cursor: pointer;
  border-radius: 100%;
}

nav .navigation {
  display: flex;
}

#menu-btn {
  width: 30px;
  height: 30px;
  display: none;
}

#menu-btn {
  display: none;
}

nav .navigation ul {
  display: flex;
  justify-self: flex-end;
  align-items: center;
}

nav .navigation ul li {
  list-style: none;
  margin-left: 30px;
}

nav .navigation ul li a {
  text-decoration: none;
  color: rgb(21, 21, 100);
  font-size: 16px;
  font-weight: 500;
  transition: 0.5s;
}

nav .navigation ul li a.active,
nav .navigation ul li a:hover {
  color: rgb(255, 221, 28);
}

/* Home */

#home {
  background-image: linear-gradient(rgba(9, 5, 54, 0.3), rgba(19, 17, 118, 0.7)),
    url("/static/image/background.jpg");
  width: 100%;
  height: 100vh;
  background-size: cover;
  background-position: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding-top: 40px;
}

#home h2 {
  color: white;
  font-size: 2.2rem;
  letter-spacing: 1px;
}

#home p {
  width: 50%;
  color: white;
  font-size: 0.9rem;
  line-height: 25px;
}

#home .btn {
  margin-top: 40px;
}

#home a {
  text-decoration: none;
  font-size: 0.9rem;
  padding: 13px 35px;
  background-color: #fff;
  font-weight: 600;
  border-radius: 5px;
}

#home a.blue {
  margin: 18px;
  background-color: rgb(21, 21, 100);
  color: #fff;
}

#home a.blue:hover {
  background-color: #fff;
  color: rgb(21, 21, 100);
  transition: 0.5s ease;
}

#home a.yellow {
  margin: 18px;
  background-color: #fdc93b;
  color: #fff;
}

#home a.yellow:hover {
  background-color: whitesmoke;
  color: rgb(21, 21, 100);
  transition: 0.3s ease;
}

/* features */

#features {
  padding: 5vw 8vw 0 8vw;
  text-align: center;
}

#features .fea-base {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  grid-gap: 1rem;
  margin-top: 30px;
}

#features .fea-box {
  background: #e9e9f3;
  text-align: start;
}

#features .fea-box i {
  font-size: 2.3rem;
  color: rgb(44, 44, 80);
}

#features .fea-box h3 {
  font-size: 1.4rem;
  font-weight: 600;
  color: rgb(46, 46, 59);
  padding: 13px 0 7px 0;
}

#features .fea-box p {
  font-size: 1rem;
  font-weight: 400;
  color: rgb(70, 70, 87);
}

/* course */

#course {
  padding: 8vw 8vw 8vw 8vw;
  text-align: center;
}

#course .course-box {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  grid-gap: 1rem;
  margin-top: 50px;
}

#course .courses {
  text-align: start;
  background: #f9f9ff;
  height: 100%;
  position: relative;
}

#course .courses img {
  width: 100%;
  height: 60%;
  background-size: cover;
  background-position: center;
}

#course .courses .detail {
  padding: 15px 15px 0 15px;
}

#course .courses .detail i {
  color: #fdc93b;
  font-size: 0.9rem;
}

#course .courses .cost {
  background-color: rgb(69, 69, 167);
  color: #fff;
  line-height: 70px;
  width: 70px;
  height: 70px;
  text-align: center;
  border-radius: 50%;
  position: absolute;
  right: 15px;
  bottom: 100px;
}

/* Ragistration */

#ragistration {
  padding: 6vw 8vw 6vw 8vw;
  background-image: linear-gradient(rgba(99, 112, 168, 0.5),
      rgba(81, 91, 233, 0.5)),
    url("/static/image/hacking.jpg");
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#ragistration .reminder {
  color: #fff;
}

#ragistration .reminder h1 {
  color: #fff;
}

#ragistration .reminder .time {
  display: flex;
  margin-top: 40px;
}

#ragistration .reminder .time .date {
  text-align: center;
  padding: 13px 33px;
  background-color: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(4px);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  border-radius: 10px;
  margin: 0 5px 10px 5px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  font-size: 1rem;
  font-weight: 600;
}

#ragistration .form {
  background: #fff;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  padding: 40px;
  box-shadow: 0 8px 30px 0 rgba(31, 38, 135, 0.37);
}

#ragistration .form input {
  margin: 15px;
  padding: 15px 10px;
  border: 1px solid rgb(84, 40, 241);
  outline: none;
}

#ragistration .form input::placeholder {
  color: #413c3c;
  font-weight: 500;
  font-size: 0.9rem;
}

#ragistration .form .btn {
  margin-top: 15px;
}

#ragistration .form a.yellow {
  text-decoration: none;
  font-size: 0.9rem;
  padding: 13px 35px;
  background-color: #fff;
  font-weight: 600;
  border-radius: 5px;
  margin: 18px;
  background-color: #fdc93b;
  color: #fff;
}

#ragistration .form a.yellow:hover {
  background-color: whitesmoke;
  color: rgb(21, 21, 100);
  transition: 0.3s ease;
}

/* profile */

#experts {
  padding: 8vw 8vw 8vw 8vw;
  text-align: center;
}

#experts img {
  height: 180px;
  width: 220px;
  border-radius: 75%;
}

#experts .expert-box {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 1rem;
  margin-top: 50px;
}

#experts .expert-box .profile {
  background: #fafaf1;
  padding: 30px 20px;
}

.pro-links {
  margin-top: 10px;
}

.pro-links i {
  padding: 10px 13px;
  border: 1px solid rgb(21, 21, 100);
  cursor: pointer;
  transform: 0.3s ease;
}

.pro-links i:hover {
  background: rgb(21, 21, 100);
  color: #fff;
  border: 1px solid rgb(21, 21, 100);
  cursor: pointer;
}

/* FOOTER */

footer {
  padding: 5vw;
  background: #101c32;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
}

footer .footer-col {
  padding: 20px;
}

footer h3 {
  color: rgb(241, 240, 245);
  font-weight: 500;
  padding-bottom: 10px;
}

footer li {
  list-style: none;
  color: #7b838c;
  padding: 10px 0;
  font-size: 15px;
  cursor: pointer;
  transition: 0.3s ease;
}

footer li:hover {
  color: rgb(241, 240, 245);
}

footer p {
  color: #7b838a;
}

footer .subscribe {
  margin-top: 20px;
}

footer input {
  width: 230px;
  padding: 15px 12px;
  background: #334f6c;
  border: none;
  outline: none;
  color: #fff;
}

footer .subscribe a {
  text-decoration: none;
  font-size: 0.9rem;
  padding: 12px 15px;
  background-color: #fff;
  font-weight: 600;
}

footer .subscribe a.yellow {
  margin: 18px;
  background-color: #fdc93b;
  color: #fff;
}

footer .subscribe a.yellow:hover {
  background-color: whitesmoke;
  color: rgb(21, 21, 100);
  transition: 0.3s ease;
}

footer .copyright {
  margin-top: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  flex-wrap: wrap;
}

footer .copyright p {
  color: #fff;
}

footer .copyright .pro-links {
  margin-top: 0px;
}

footer .copyright .pro-links i {
  background: #5f7185;
  color: #fff;
}

footer .copyright .pro-links i:hover {
  background: #fdc93b;
  color: #2c2c2c;
}

/* ABOUT HOME */
#about-home {
  background-image: linear-gradient(rgba(9, 5, 54, 0.3),
      rgba(5, 4, 46, 0.7)),
    url("image/background.jpg");
  width: 100%;
  height: 60vh;
  background-size: cover;
  background-position: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding-top: 40px;
}

#about-home h2 {
  color: #fff;
  font-size: 2.2rem;
  letter-spacing: 1px;
}

#about-container {
  display: flex;
  align-items: center;
  padding: 8vw 8vw 2vw 8vw;
}

#about-container .about-img img {
  width: 90%;
}

#about-container .about-img {
  width: 100%;
  padding: 60px;
}

#about-container .about-text {
  width: 40%;
}

#about-container .about-text h2 {
  color: #29303b;
  padding-bottom: 15px;
}

#about-container .about-text p {
  color: #686f7a;
  font-size: 300;
}

#about-container .about-text .about-fe {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-top: 30px;
}

#about-container .about-text .about-fe img {
  width: 50px;
  background-size: cover;
  background-position: center;
}

#about-container .about-text .about-fe .fe-text {
  width: 90%;
}

#about-container .about-text .about-fe .fe-text h5 {
  font-size: 15px;
  color: #29303b;
}

#trust {
  text-align: center;
  padding: 8vw;
}

#trust .tust-img {
  margin-top: 60px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#trust .tust-img img {
  width: 90px;
  height: auto;
}

/* BLOG */
#blog-container {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  padding: 8vw;
}

#blog-container .blogs {
  width: 60%;
}

#blog-container .blogs img {
  width: 100%;
  border-radius: 20px;
  padding-top: 19px;
}

#blog-container .blogs .post h3 {
  color: #29303b;
  padding: 15px 0px 10px 0px;
}

#blog-container .blogs .post p {
  color: #757373;
  padding-bottom: 20px;
}

#blog-container .blogs .post a {
  text-decoration: none;
  font-size: 0.9rem;
  padding: 13px 35px;
  background-color: rgb(21, 21, 100);
  color: #fff;
  border-radius: 5px;
  font-weight: 600;
}

#blog-container .cate {
  width: 30%;
}

#blog-container .cate h2 {
  padding-bottom: 7px;
}

#blog-container .cate a {
  text-decoration: none;
  color: #757373;
  font-weight: 500;
  line-height: 40px;
}

#blog-container .blogpost {
  width: 60%;
  margin: 0 auto;
}

#blog-container .blogpost .post img {
  height: 264px;
  width: 513px;
  border-radius: 5%;
  padding-bottom: 8px;
}

#blog-container .blogpost p {
  text-align: justify;
  padding-bottom: 60px !important;
}

#blog-container .blogpost .post a {
  text-decoration: none;
  font-size: 0.9rem;
  padding: 13px 35px;
  background-color: rgb(21, 21, 100);
  color: #fff;
  border-radius: 5px;
  font-weight: 600;
}

/* course-iner */

#course-iner {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: 8vh;
}

#course-iner h3 {
  padding: 35px 0px 25px 0px;
  color: #29303b;
}

#course-iner P {
  color: #64626e;
}

#course-iner hr {
  height: 1px;
  background: rgba(236, 226, 229, 0.5);
  margin-top: 40px;
}

#course-iner .overview {
  width: 70%;
}

#course-iner .overview .course-img {
  width: 100%;
  height: 60vh;
  object-fit: cover;
  border-radius: 12px;
  margin-bottom: 20px;
}

#course-iner .overview .course-head {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
}

#course-iner .overview .course-head .c-name {
  width: 70%;
}

#course-iner .overview .course-head .c-name h2 {
  color: #29303b;
}

#course-iner .overview .course-head .c-name .star {
  margin: 6px 0;
}

#course-iner .overview .course-head .c-name .star i {
  color: #fdc93b;
  font-size: 0.9rem;
}

#course-iner .overview .course-head .c-name p {
  font-size: 15px;
}

#course-iner .overview .course-head span {
  padding: 19px 13px;
  color: #5838fc;
  font-size: 24px;
  font-weight: 7000;
  background-color: rgba(88, 56, 252, 0.1);
}

#course-iner .learn p {
  font-size: 15px;
  padding-bottom: 15px;
}

#course-iner .learn p i {
  color: #654ce4;
  font-weight: 700;
  margin-right: 20px;
}

#course-iner .tutor {
  display: flex;
}

#course-iner .tutor img {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  margin-right: 20px;
}

#course-iner .tutor h5 {
  font-size: 15px;
}

#course-iner .enroll {
  width: 300px;
  padding: 0px 30px 30px 30px;
  border-radius: 11px;
  box-shadow: 0px 20px 40px 0 rgb(11 2 55 / 8%);
}

#course-iner .enroll h3 {
  padding-bottom: 10px;
}

#course-iner .enroll p {
  font-size: 15px;
  color: #64626e;
  margin: 15px 0;
}

#course-iner .enroll p i {
  color: #654ce4;
  font-weight: 500;
  margin-right: 18px;
  width: 16px;
  height: 16px;
  line-height: 16px;
  text-align: center;
}

#course-iner .enroll .enroll-btn {
  padding: 25px 0px 20px 0px;
  margin: auto;
  text-align: center;
}

#course-iner .enroll .enroll-btn a {
  text-decoration: none;
  font-size: 0.8rem;
  padding: 13px 45px;
  border-radius: 5px;
  font-weight: 600;
  color: #fff;
  background: rgb(50, 50, 136);
}

/* contact uss */

#contact {
  padding: 8vw;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

#contact .getin {
  width: 350px;
}

#contact .getin h2 {
  color: #2c234d;
  font-size: 30px;
  font-weight: 800;
  line-height: 0.8;
  margin-bottom: 16px;
}

#contact .getin p {
  color: #686875;
  line-height: 24px;
  margin-bottom: 33px;
  padding-bottom: 25px;
  border-bottom: 1px solid #e5e4ed;
}

#contact .getin h3 {
  color: #2c234d;
  font-size: 16px;
  font-weight: 600;
  line-height: 26px;
  margin-bottom: 15px;
}

#contact .getin .getin-details div {
  display: flex;
}

#contact .getin .getin-details div .get {
  font-size: 16px;
  line-height: 22px;
  color: #5838fc;
  margin-right: 20px;
}

#contact .getin .getin-details div p {
  font-size: 14px;
  border-bottom: none;
  line-height: 22px;
  margin-bottom: 15px;
}

#contact .form {
  width: 60%;
  background: #f7f6fa;
  padding: 40px;
  border-radius: 10px;
}

#contact .form h4 {
  font-size: 24px;
  color: #2c234d;
  line-height: 30px;
  margin-bottom: 8px;
}

#contact .form p {
  color: #686875;
  line-height: 24px;
  padding-bottom: 25px;
}

#contact .form .form-row {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

#contact .form .form-row input {
  width: 48%;
  font-size: 14px;
  font-weight: 400;
  border-radius: 3px;
  border: none;
  background: #ffffff;
  color: #7e7c87;
  outline: none;
  padding: 20px 30px;
  margin-bottom: 20px;
}

#contact .form .form-col textarea,
#contact .form .form-col input {
  width: 100%;
  font-size: 14px;
  font-weight: 400;
  border-radius: 3px;
  border: none;
  background: #ffffff;
  color: #7e7c87;
  outline: none;
  padding: 20px 30px;
  margin-bottom: 20px;
}

#contact .form button {
  font-size: 0.9rem;
  padding: 13px 25px;
  background: rgb(21, 21, 100);
  border-radius: 5px;
  outline: none;
  border: none;
  font-weight: 600;
  cursor: pointer;
  color: #fff;
}

#map {
  width: 100%;
  height: 70vh;
  margin-bottom: 8vw;
}

#map iframe {
  width: 100%;
  height: 100%;
}

@media (max-width: 769px) {
  nav {
    padding: 15px 20px;
    z-index: 130px;
  }

  nav img {
    width: 130px;
  }

  #menu-btn {
    display: initial;
  }

  #menu-close {
    display: initial;
    font-size: 1.6rem;
    color: #fff;
    padding: 30px 0 20px 20px;
  }

  nav .navigation ul {
    position: absolute;
    top: 0;
    right: -220px;
    width: 220px;
    height: 100vh;
    background-color: rgba(17, 20, 104, 0.45);
    backdrop-filter: blur(4.5px);
    border: 1px solid rgba(225, 225, 225, 0.18);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    transition: 0.3s ease;
  }

  nav .navigation ul.active {
    right: 0;
  }

  nav .navigation ul li {
    padding: 20px 0 20px 40px;
    margin-left: 0;
  }

  nav .navigation ul li a {
    color: #fff;
  }

  #home {
    padding-top: 0px;
  }

  #home p {
    width: 90%;
  }

  #features {
    padding: 8vw, 4vw, 0vw, 4vw;
  }

  #course {
    padding: 8vw, 4vw, 0vw, 4vw;
  }

  #ragistration {
    margin: 8vw;
    padding: 8vw, 4vw, 6vw, 4vw;
  }

  #ragistration .reminnder .time {
    display: flex;
    flex-wrap: wrap;
    margin-top: 40px;
  }

  #experts {
    padding: 8vw, 4vw, 4vw, 4vw;
  }

  footer .copyright .pro-links {
    margin-top: 15px;
  }
}

/* ABOUT */
#about-container {
  padding: 8vw 4vw 2vw 4vw;
}

#about-container .about-img {
  padding-right: 30px;
}

@media (max-width: 475px) {
  #ragistration {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  #ragistration .reminder .time {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
    margin-bottom: 20px;
  }
}